{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\1404042410\\\\Documents\\\\apps\\\\NavTest-main\\\\navigation\\\\screens\\\\DetailsScreen.js\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { StatusBar } from 'expo-status-bar';\nexport default function DetailsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isLoading = _React$useState2[0],\n    setIsLoading = _React$useState2[1];\n  var _React$useState3 = React.useState(),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    error = _React$useState4[0],\n    setError = _React$useState4[1];\n  var _React$useState5 = React.useState(),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    response = _React$useState6[0],\n    setResponse = _React$useState6[1];\n  useEffect(function () {\n    fetch(\"https://apis.is/petrol\").then(function (res) {\n      return res.json();\n    }).then(function (result) {\n      setIsLoading(false);\n      setResponse(result);\n    }, function (error) {\n      setIsLoading(false);\n      setError(error);\n    });\n  }, []);\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    onPress: function onPress() {\n      return navigation.navigate('Home');\n    },\n    style: {\n      fontSize: 26,\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, \"Details Screen\"));\n}","map":{"version":3,"names":["React","StyleSheet","Text","View","Button","ActivityIndicator","StatusBar","DetailsScreen","_ref","navigation","_React$useState","useState","_React$useState2","_slicedToArray","isLoading","setIsLoading","_React$useState3","_React$useState4","error","setError","_React$useState5","_React$useState6","response","setResponse","useEffect","fetch","then","res","json","result","createElement","style","flex","alignItems","justifyContent","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onPress","navigate","fontSize","fontWeight"],"sources":["C:/Users/1404042410/Documents/apps/NavTest-main/navigation/screens/DetailsScreen.js"],"sourcesContent":["import * as React from 'react';\n\nimport { StyleSheet, Text, View, Button, ActivityIndicator } from 'react-native';\nimport { StatusBar } from 'expo-status-bar';\n\n\nexport default function DetailsScreen({ navigation }) {\n    let [isLoading, setIsLoading] = React.useState(true);\n  let [error, setError] = React.useState();\n  let [response, setResponse] = React.useState();\n\n  useEffect(() => {\n    fetch(\"https://apis.is/petrol\")\n        .then(res => res.json())\n        .then(\n            (result) => {\n              setIsLoading(false);\n              setResponse(result);\n            },\n            (error) => {\n              setIsLoading(false);\n              setError(error);\n            }\n        )\n  }, []);\n    return (\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n            <Text\n                onPress={() => navigation.navigate('Home')}\n                style={{ fontSize: 26, fontWeight: 'bold' }}>Details Screen</Text>\n        </View>\n    );\n}"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,iBAAA;AAG/B,SAASC,SAAS,QAAQ,iBAAiB;AAG3C,eAAe,SAASC,aAAaA,CAAAC,IAAA,EAAiB;EAAA,IAAdC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC9C,IAAAC,eAAA,GAAgCV,KAAK,CAACW,QAAQ,CAAC,IAAI,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAA/CI,SAAS,GAAAF,gBAAA;IAAEG,YAAY,GAAAH,gBAAA;EAC9B,IAAAI,gBAAA,GAAwBhB,KAAK,CAACW,QAAQ,CAAC,CAAC;IAAAM,gBAAA,GAAAJ,cAAA,CAAAG,gBAAA;IAAnCE,KAAK,GAAAD,gBAAA;IAAEE,QAAQ,GAAAF,gBAAA;EACpB,IAAAG,gBAAA,GAA8BpB,KAAK,CAACW,QAAQ,CAAC,CAAC;IAAAU,gBAAA,GAAAR,cAAA,CAAAO,gBAAA;IAAzCE,QAAQ,GAAAD,gBAAA;IAAEE,WAAW,GAAAF,gBAAA;EAE1BG,SAAS,CAAC,YAAM;IACdC,KAAK,CAAC,wBAAwB,CAAC,CAC1BC,IAAI,CAAC,UAAAC,GAAG;MAAA,OAAIA,GAAG,CAACC,IAAI,CAAC,CAAC;IAAA,EAAC,CACvBF,IAAI,CACD,UAACG,MAAM,EAAK;MACVd,YAAY,CAAC,KAAK,CAAC;MACnBQ,WAAW,CAACM,MAAM,CAAC;IACrB,CAAC,EACD,UAACX,KAAK,EAAK;MACTH,YAAY,CAAC,KAAK,CAAC;MACnBI,QAAQ,CAACD,KAAK,CAAC;IACjB,CACJ,CAAC;EACP,CAAC,EAAE,EAAE,CAAC;EACJ,OACIlB,KAAA,CAAA8B,aAAA,CAAC3B,IAAI;IAAC4B,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,UAAU,EAAE,QAAQ;MAAEC,cAAc,EAAE;IAAS,CAAE;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACrExC,KAAA,CAAA8B,aAAA,CAAC5B,IAAI;IACDuC,OAAO,EAAE,SAAAA,QAAA;MAAA,OAAMhC,UAAU,CAACiC,QAAQ,CAAC,MAAM,CAAC;IAAA,CAAC;IAC3CX,KAAK,EAAE;MAAEY,QAAQ,EAAE,EAAE;MAAEC,UAAU,EAAE;IAAO,CAAE;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,mBAAqB,CACnE,CAAC;AAEf"},"metadata":{},"sourceType":"module","externalDependencies":[]}